<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\SvgIcons;
use Magento\Framework\View\Element\Template;
use Hyva\Theme\ViewModel\Slider;
use Magento\Framework\Escaper;

/** @var ViewModelRegistry $viewModels */
/** @var Template $block */
/** @var Escaper $escaper */

$icons = $viewModels->require(SvgIcons::class);
$sliderViewModel = $viewModels->require(Slider::class);

/**
 * Each item needs either 'svg' or 'image_path' to be set
 * `svg` expects a valid string containing SVG source code,
 * `image_url` expects an url to an image
 *
 * We're generating the SVG source using the SvgIcons, which are documented here:
 * https://docs.hyva.io/hyva-themes/writing-code/working-with-view-models/svgicons.html
 */

$items = [
    [
        'image_url'    =>
'https://unsplash.com/photos/a1_DQQhtLVc/download?force=true&auto=format&fit=crop&w=1280&q=80',
        'image_width'  => 1280,
        'image_height' => 853,
        'text_small'   => 'NEW ARRIVALS',
        'text_large'   => '(TRACK)SUIT UP!',
        'url'          => $block->getUrl('home'),
    ],
    [
        'image_url'    =>
'https://unsplash.com/photos/HyvE5SiKMUs/download?force=true&auto=format&fit=crop&w=1280&q=80',
        'image_width'  => 1280,
        'image_height' => 853,
        'text_small'   => 'SUMMER COLLECTION',
        'text_large'   => 'GET YOUR GEAR NOW',
        'url'          => $block->getUrl('home'),
    ],
    [
        'image_url'    =>
'https://unsplash.com/photos/zlPmPfXfr4A/download?force=true&auto=format&fit=crop&w=1280&q=80',
        'image_width'  => 1280,
        'image_height'  => 853,
        'text_small' => 'WINTER COLLECTION',
        'text_large' => 'SHOW YOUR STYLE',
        'url'          => $block->getUrl('home'),
    ],
    [
        'image_url'    =>
'https://unsplash.com/photos/X6jtULYJQz8/download?force=true&auto=format&fit=crop&w=1280&q=80',
        'image_width'  => 1280,
        'image_height'  => 853,
        'text_small' => 'SALE',
        'text_large' => '10% OFF, ONLY THIS WEEKEND',
        'url'          => $block->getUrl('home'),
    ],
];

?>
<div>
    <?=
    $sliderViewModel
        ->getSliderForItems(
            'Magento_Theme::elements/ui-slider/slider-item.phtml',
            $items,
            'Magento_Theme::elements/ui-slider/slider-php.phtml'
        )
        ->toHtml()
    ?>
</div>


<?php
$items = [
    [
        'url'          => $block->getUrl('home'), // optional
        'svg'          => $icons->renderHtml('lorum-logo-1', '', 170, 38)
    ],
    /* [
        // alternatively, define an image_url with additional data:
        'image_url'    => $block->getViewFileUrl('Hyva_Theme::svg/lorum-logo-1.svg'),
        'alt'          => 'logo ipsum',
        'image_width'  => 170,
        'image_height' => 38,
    ], */
    [
        'url'          => $block->getUrl('home'),
        'svg'          => $icons->renderHtml('lorum-logo-2', '', 170, 38)
    ],
    [
        'url'          => $block->getUrl('home'),
        'svg'          => $icons->renderHtml('lorum-logo-3', '', 170, 52)
    ],
    [
        'url'          => $block->getUrl('home'),
        'svg'          => $icons->renderHtml('lorum-logo-4', '', 170, 88)
    ],
    [
        'url'          => $block->getUrl('home'),
        'svg'          => $icons->renderHtml('lorum-logo-1', '', 170, 38)
    ],
    [
        'url'          => $block->getUrl('home'),
        'svg'          => $icons->renderHtml('lorum-logo-2', '', 170, 38)
    ],
];
$itemIndex = 1;
?>

<script>
    function carousel() {
        return {
            container: null,
            prev: null,
            next: null,
            first: null,
            visibleElements: null,
            speed: 3000, // set to 0 to disable
            slidePage: true, // set to false for sliding one item at the time, true for the whole visible set
            sliderTimer: null,
            init() {
                this.container = this.$refs.container
                this.first = this.container.firstElementChild;

                this.update();
                this.container.addEventListener('scroll', this.update.bind(this), {passive: true});
                if(this.speed > 0){
                    this.start();
                }
            },
            start() {
                this.sliderTimer = setInterval(() => this.scrollToNextOrFirst() , this.speed);
            },
            stop() {
                clearInterval(this.sliderTimer);
            },
            update() {
                const rect = this.container.getBoundingClientRect();

                this.visibleElements = Array.from(this.container.children).filter((child) => {
                    const childRect = child.getBoundingClientRect();
                    return childRect.left >= Math.floor(rect.left) && Math.floor(childRect.right) <= rect.right;
                });

                if (this.visibleElements.length > 0) {
                    this.prev = this.getPrevElement();
                    this.next = this.getNextElement();
                }
            },
            getPrevElement() {
                const sibling = this.visibleElements[0].previousElementSibling;
                return (sibling instanceof HTMLElement) ? sibling : null;
            },
            getNextElement() {
                const list = this.visibleElements;
                const lastElementIsVisible = !(list[list.length - 1].nextElementSibling instanceof HTMLElement);

                const sibling = (this.slidePage)
                    ? list[list.length - 1].nextElementSibling
                    : ((lastElementIsVisible)
                        ? null
                        : list[0].nextElementSibling);

                return (sibling instanceof HTMLElement) ? sibling : null;
            },
            scrollToNextOrFirst() {
                (this.next !== null)? this.scrollTo(this.next) : this.scrollTo(this.first);
            },
            scrollTo(element) {
                const current = this.container;
                if (!current || !element) return;
                const nextScrollPosition = element.offsetLeft;

                current.scroll({
                    left: nextScrollPosition,
                    behavior: 'smooth',
                });
            }
        };
    }
</script>
