<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\ProductPage;
use Magento\Catalog\Model\Product;
use Magento\Eav\Model\Config as EavConfig;
use Magento\Framework\App\ObjectManager;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var ProductPage $productViewModel */
$productViewModel = $viewModels->require(ProductPage::class);
/** @var Product $product */
$product = $productViewModel->getProduct();

$customStockStatus = '';
$productCode = $product->getData('product_code') ?? 'N/A';

if ($product) {
    $objectManager = ObjectManager::getInstance();
    $eavConfig = $objectManager->get(EavConfig::class);

    // Fetch 'custom_stock_status' value
    $customStockStatusId = $product->getData('custom_stock_status');

    if ($customStockStatusId) {
        // Load attribute and options
        $attribute = $eavConfig->getAttribute('catalog_product', 'custom_stock_status');
        $options = $attribute->getSource()->getAllOptions();

        foreach ($options as $option) {
            if ($option['value'] == $customStockStatusId) {
                $customStockStatus = $option['label'];
                break;
            }
        }

        // Replace placeholders with actual values
        $productQty = 0;
        if (isset($product->getQuantityAndStockStatus()['qty']))
            $productQty = $product->getQuantityAndStockStatus()['qty'];
        $specialPrice = $product->getSpecialPrice() ?? $product->getPrice();
        $expectedDate = date('Y-m-d', strtotime('+2 days')); // Example for expected date

        $replacements = [
            '{qty}' => $productQty,
            '{special_price}' => number_format((float)$specialPrice, 2),
            '{expected_date}' => $expectedDate,
            '{day-after-tomorrow}' => date('Y-m-d', strtotime('+2 days'))
        ];

        foreach ($replacements as $placeholder => $value) {
            $customStockStatus = str_replace($placeholder, (string)$value, $customStockStatus);
        }
    }
}

// Fallback to stock status
$stockRegistry = $objectManager->get(\Magento\CatalogInventory\Api\StockRegistryInterface::class);
$stockItem = $stockRegistry->getStockItem($product->getId());
$stockStatus = $stockItem['is_in_stock'] ? 'In Stock' : 'Out of Stock';
$displayStockStatus = $customStockStatus ?: $stockStatus;
?>

<div class="w-full mb-6">

    <div class="my-2 flex text-4xl font-bold">
        <?= $escaper->escapeHtml($product->getName()); ?>
    </div>

    <div class="my-2 flex text-lg">
        Product Code: <?= $escaper->escapeHtml($productCode); ?>
    </div>

    <div role="group" aria-label="<?= $escaper->escapeHtmlAttr('Price') ?>">
        <?= $block->getChildHtml("product.info.price") ?>
    </div>

    <div class="my-2 flex text-xl">
        Delivery | <?= $escaper->escapeHtml($displayStockStatus); ?>
    </div>

    <?= $block->getChildHtml('product.info.form') ?>

    <div class="flex flex-col sm:flex-row items-end my-4">

        <div class="flex mt-4 w-full sm:mt-0">

            <?php if ($product->isSaleable()): ?>

                <?= $block->getChildHtml("product.info.quantity") ?>

                <?= $block->getChildHtml("product.info.addtocart") ?>

                <?= $block->getChildHtml('product.info.addtowishlist'); ?>

            <?php endif; ?>

        </div>

    </div>

    <?= $block->getChildHtml("product.info.additional") ?>
</div>
